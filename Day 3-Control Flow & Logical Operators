##Day 3-Control Flow & Logical Operators

#Control FLow: Decision Making

For this particularly, we use if-else statements which finalises the decision. It is similar to when you have to decide one result out of the two.

Syntax:

if condition:
  pass        -> the decision has to be placed in indentation block.
else condition:  -> condition writing is optional
  print("I am an else block") -> the decision has to be placed in indentation block.

Please note that the if-else are pairs so they both follow the same indentation line. As shown above.

#Comparison Operators:

1. >   ( Greater than )
2. <   ( Less than )  
3. >=  ( Greater than or equal to )
4. =<  ( Less than or equal to )
5. ==  ( Equal to ) -> Checking to see the quality it is not similar to assignment operator (=)
6. !=  ( Not Equal to )

Exercise 3.1: 

## Odd or Even

# Instructions

Write a program that works out whether if a given number is an odd or even number. 

Even numbers can be divided by 2 with no remainder. 

e.g. 86 is **even** because 86 Ã· 2 = 43

43 does not have any decimal places. Therefore the division is clean.

e.g. 59 is **odd** because 59 Ã· 2 = 29.5

29.5 is not a whole number, it has decimal places. Therefore there is a remainder of 0.5, so the division is not clean.

The **modulo** is written as a percentage sign (%) in Python. It gives you the remainder after a division. 

e.g. 

6 Ã· 2 = 3 with no remainder. 

```
6 % 2 = 0
```

5 Ã· 2 = 2 x **2** + 1, remainder is 1.

```
5 % 2 = 1
```

14 Ã· 4 = 3 x **4** + 2, remainder is 2.

```
14 % 4 = 2

SOlution:

# ðŸš¨ Don't change the code below ðŸ‘‡
number = int(input("Which number do you want to check? "))
# ðŸš¨ Don't change the code above ðŸ‘†

#First *fork* your copy. Then copy-paste your code below this line ðŸ‘‡
#Finally click "Run" to execute the tests

if (number%2==0):
  print("This is an even number.")
else:
  print("This is an odd number.")
  
#Nested if-else

if condition: ( This has to be true in order to go to the next conditional block of if else )
 if condition:
   pass
 else:
   print("do this")
else condition:
  print("do this")

## BMI Calculator 2.0

# Instructions

Write a program that interprets the Body Mass Index (BMI) based on a user's weight and height.

It should tell them the interpretation of their BMI based on the BMI value.

- Under 18.5 they are underweight
- Over 18.5 but below 25 they have a normal weight
- Over 25 but below 30 they are slightly overweight
- Over 30 but below 35 they are obese
- Above 35 they are clinically obese.

![](https://cdn.fs.teachablecdn.com/qTOp8afxSkGfU5YGYf36)

The BMI is calculated by dividing a person's weight (in kg) by the square of their height (in m):

![](https://cdn.fs.teachablecdn.com/jKHjnLrNQjqzdz3MTMyv)

**Warning** you should **round** the result to the nearest whole number. The interpretation message needs to include the words in bold from the interpretations above. e.g. **underweight, normal weight,  overweight, obese, clinically obese**. 

# Example Input

```
weight = 85
```

```
height = 1.75
```

# Example Output

85 Ã· 1.75 x 1.75 =  27.755102040816325

```
Your BMI is 28, you are slightly overweight.
```

Solution:

# ðŸš¨ Don't change the code below ðŸ‘‡
height = float(input("enter your height in m: "))
weight = float(input("enter your weight in kg: "))
# ðŸš¨ Don't change the code above ðŸ‘†

#First *fork* your copy. Then copy-paste your code below this line ðŸ‘‡
#Finally click "Run" to execute the tests

BMI = round(weight / height**2)

if(BMI<18.5):
  print(f'Your BMI is {BMI}, you are underweight.')
elif(BMI<25):
  print(f'Your BMI is {BMI}, you have a normal weight.')
elif(BMI < 30):
  print(f'Your BMI is {BMI}, you are slightly overweight.')
elif(BMI<35):
  print(f'Your BMI is {BMI}, you are obese.')
else:
  print(f'Your BMI is {BMI}, you are clinically obese.')
